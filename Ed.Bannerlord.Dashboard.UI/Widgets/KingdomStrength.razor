@using Ed.Bannerlord.Dashboard.Models.Widgets

<BarChart @ref="barChart" TItem="float" Options="options"/>

@code {
    private bool initialized;
    private BarChart<float> barChart;
    private BarChartOptions options = new BarChartOptions
    {
        Animation = new Animation
        {
            Duration = 0,
        },
    };

    /// <summary>
    /// Updates the widget.
    /// </summary>
    /// <param name="model">Model received from the server.</param>
    public async Task Update(object model)
    {
        if (!(model is KingdomStrengthModel))
        {
            return;
        }

        var widgetModel = model as KingdomStrengthModel;
        await HandleRedraw(widgetModel);
    }

    private async Task HandleRedraw(KingdomStrengthModel model)
    {
        await barChart.Clear();
        await barChart.AddLabelsDatasetsAndUpdate(GetLabels(model), GetBarChartDataset(model));
    }

    private List<string> GetLabels(KingdomStrengthModel model) =>
        model.Kingdoms.Select(m => m.Name).ToList();

    private BarChartDataset<float> GetBarChartDataset(KingdomStrengthModel model) =>
        new BarChartDataset<float>
        {
            Label = "Kingdom Strength",
            Data = model.Kingdoms.Select(m => m.Strength).ToList(),
            BackgroundColor = model.Kingdoms.Select(m => m.PrimaryColor).ToList(),
            BorderColor = model.Kingdoms.Select(m => m.SecondaryColor).ToList(),
        };
}
