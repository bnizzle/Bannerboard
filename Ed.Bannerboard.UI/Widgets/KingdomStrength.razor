@inherits WidgetBase

<div class="card">
    <div class="card-header">
        Strength
    </div>
    <div class="card-body">
        <div class="@(!isInitialized ? "d-none" : "")">
            <BarChart @ref="barChart" TItem="float" OptionsObject="BaseBarChartOptions" />
        </div>

        @if (!isInitialized)
        {
            <span>No data or incompatible mod version.</span>
        }
    </div>
</div>

@code {
    private readonly Version _minimumSupportedVersion = new Version("0.2.0");
    private BarChart<float> barChart;
    private bool isInitialized = false;

    public override bool CanUpdate(object model, Version version)
    {
        return IsCompatible(version, _minimumSupportedVersion) && model is KingdomStrengthModel;
    }

    public override async Task Update(object model)
    {
        if (!isInitialized)
        {
            isInitialized = true;
            StateHasChanged();
        }

        await HandleRedraw(model as KingdomStrengthModel);
    }

    private async Task HandleRedraw(KingdomStrengthModel model)
    {
        await barChart.Clear();
        await barChart.AddLabelsDatasetsAndUpdate(GetLabels(model), GetDataset(model));
    }

    private List<string> GetLabels(KingdomStrengthModel model) =>
        model.Kingdoms.Select(m => m.Name).ToList();

    private BarChartDataset<float> GetDataset(KingdomStrengthModel model) =>
        new BarChartDataset<float>
        {
            Data = model.Kingdoms.Select(m => m.Strength).ToList(),
            BackgroundColor = model.Kingdoms.Select(m => m.PrimaryColor).ToList(),
            BorderColor = model.Kingdoms.Select(m => m.SecondaryColor).ToList(),
        };
}
